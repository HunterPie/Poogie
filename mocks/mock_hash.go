// Code generated by MockGen. DO NOT EDIT.
// Source: ./core/crypto/hash.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIHashService is a mock of IHashService interface.
type MockIHashService struct {
	ctrl     *gomock.Controller
	recorder *MockIHashServiceMockRecorder
}

// MockIHashServiceMockRecorder is the mock recorder for MockIHashService.
type MockIHashServiceMockRecorder struct {
	mock *MockIHashService
}

// NewMockIHashService creates a new mock instance.
func NewMockIHashService(ctrl *gomock.Controller) *MockIHashService {
	mock := &MockIHashService{ctrl: ctrl}
	mock.recorder = &MockIHashServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIHashService) EXPECT() *MockIHashServiceMockRecorder {
	return m.recorder
}

// Hash mocks base method.
func (m *MockIHashService) Hash(content string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Hash", content)
	ret0, _ := ret[0].(string)
	return ret0
}

// Hash indicates an expected call of Hash.
func (mr *MockIHashServiceMockRecorder) Hash(content interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Hash", reflect.TypeOf((*MockIHashService)(nil).Hash), content)
}
